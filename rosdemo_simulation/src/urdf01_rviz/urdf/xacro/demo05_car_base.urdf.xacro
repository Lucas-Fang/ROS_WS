<robot name="mycar" xmlns:xacro="http://wiki.ros.org/xacro">

    <!-- 1.添加 base_footprint -->
    <xacro:property  name="footprint_radius" value="0.001" />
    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius="${footprint_radius}" />
            </geometry>
        </visual>
    </link>
    <!-- 2.添加baselink -->
    <xacro:property name="base_radius" value="0.1" />
    <xacro:property name="base_length" value="0.08" />
    <xacro:property name="lidi" value="0.015" />
    <xacro:property name="base_joint_z" value="${base_length / 2 +lidi}" />

     <link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}" />            
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="baselink_color" >
                <color rgba="1 1 1 0.8" />
            </material>
        </visual>
     </link>
    <joint name="link2footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <!-- 关节的z = 圆柱高度的一办 + 离地高度 -->
        <origin xyz="0 0 ${base_joint_z}" rpy="0 0 0" />
    </joint>
    <!-- 3.添加驱动轮 -->
    <xacro:property name="wheel_radius" value="0.0325" />    
    <xacro:property name="wheel_length" value="0.015" />
    <xacro:property name="PI" value="3.1415927" />
    <!-- 注意结果为负数 -->
    <xacro:property name="wheel_joint_z" value="${(base_length / 2 + lidi - wheel_radius) * -1}" />

    <xacro:macro name="wheel_func" params="wheel_name flag" >

        <link name="${wheel_name}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}" />            
                </geometry>
                <origin xyz="0 0 0" rpy="${PI / 2} 0 0" />
                <material name="wheel_color" >
                    <color rgba="0 0 0 0.8" />
                </material>
            </visual>
        </link>

        <!-- wheel_joint -->
        <joint name="${wheel_name}2link" type="continuous">
            <parent link="base_link" />
            <child link="${wheel_name}_wheel" />
            <!-- 
                x 无偏移
                y 车体半径
                z = 车体高度/2 + 离地间距 - 车轮半径
            -->
            <origin xyz="0 ${0.1 * flag} ${wheel_joint_z}" rpy="0 0 0" />
            <axis xyz=" 0 1 0" /> <!-- 旋转轴 -->
        </joint>     
    </xacro:macro> 

    <xacro:wheel_func wheel_name="left" flag="1" /> 
    <xacro:wheel_func wheel_name="right" flag="-1" /> 

    <!-- 4.添加全向轮 -->
    <xacro:property name="small_wheel_radius" value="0.0075" />
    <xacro:property name="small_joint_x" value="0.08" />
    <xacro:property name="small_joint_z" value="${(base_length / 2 + lidi - small_wheel_radius) * -1}" />
    
    <xacro:macro name="small_wheel_func" params="small_wheel_name flag">
        <link name="${small_wheel_name}_wheel">
            <visual>
                <geometry>
                    <sphere radius="${small_wheel_radius}" />            
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <material name="wheel_color" >
                    <color rgba="1 1 1 0.8" />
                </material>
            </visual>
        </link>

        <joint name="${small_wheel_name}2link" type="continuous">
            <parent link="base_link" />
            <child link="${small_wheel_name}_wheel" />
            <origin xyz="${small_joint_x * flag} 0 ${small_joint_z}" rpy="0 0 0" />
            <axis xyz=" 0 1 0" /> <!-- 旋转轴 -->
        </joint> 
    </xacro:macro>
    <xacro:small_wheel_func small_wheel_name="front" flag="1" />
    <xacro:small_wheel_func small_wheel_name="back" flag="-1" />

</robot>